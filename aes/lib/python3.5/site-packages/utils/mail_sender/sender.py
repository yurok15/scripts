import os
import asyncio
from aes.delivery.base_smtp import PatchedSMTP

RECIPIENT = 'SPutryaAesTestMail@aesTestQASSv2.qahostpilot.com'
SENDER = 'tinsleyHayden23@thislilpig.com'

PATH = 'mails'

HOST = 'localhost'
PORT = 1025
THREADS = 1
FILES = ['test.eml']
SSL_ENABLED = False


async def send(loop):
    for file_name in FILES or os.listdir(PATH):
        print(file_name)
        file_path = os.path.join(PATH, file_name)
        with open(file_path, 'br') as f:
            data = f.read()
        while True:
            try:
                server = PatchedSMTP(HOST, PORT, loop=loop)
                if SSL_ENABLED:
                    import ssl
                    sc = ssl.create_default_context(
                        ssl.Purpose.SERVER_AUTH,
                        cafile='../../certs/server.crt'
                    )
                    sc.check_hostname = False
                else:
                    sc = None
                await server.connect(ssl=sc)
                try:
                    await server.sendmail(SENDER, [RECIPIENT], data)
                finally:
                    await server.quit()
                break
            except ConnectionRefusedError:
                continue
    print('finish')


def main():
    loop = asyncio.get_event_loop()
    tasks = [send(loop) for i in range(THREADS)]
    loop.run_until_complete(asyncio.wait(tasks))

    print("done")


if __name__ == '__main__':
    main()
