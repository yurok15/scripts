
from aes.filters.cache import FilterCache
from aes.lib import make_hash

def test_filter_cache(simple_msg):
    cache = FilterCache(name='test')
    rawmessage = simple_msg.email.as_bytes()
    datahash = make_hash(rawmessage)
    data_to_store = {'test': 'test'}
    cache[datahash] = data_to_store
    assert data_to_store == cache[datahash]


def test_filter_cache_ttl():
    cache = FilterCache(name='test', ttl=0)
    for i in range(10):
        cache[make_hash(bytes(i))] = i
    for i in range(9):
        assert make_hash(bytes(i)) not in cache
    assert cache.get(make_hash(bytes(9))) is None
    assert cache.get(make_hash(bytes(9))) is None
    assert len(cache._cache.keys()) == 0


def test_filter_cache_lru():
    cache = FilterCache(name='test', lru=2)
    for i in range(5):
        cache[make_hash(bytes(i))] = i
    assert len(cache._cache.keys()) == 2
