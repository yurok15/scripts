import pytest

group_policy = {
    'white_black': {
        'white': [],
        'black': [{'template': '*@local'}],
    }
}


@pytest.mark.parametrize('inbound', [True, False])
async def test_outbound(service_runner, msg, inbound):
    runner = await service_runner()
    runner['policy'].configure_user(
        'user1@local', {'group': group_policy}, inbound=inbound)
    runner['policy'].configure_user(
        'user2@local', {'group': {}}, inbound=inbound)
    await runner['client'].send_message(
        'user1@local', 'user2@local', msg.email, inbound=inbound)
    await runner['client'].send_message(
        'user2@local', 'user1@local', msg.email, inbound=inbound)
    assert len(runner['delivery_send'].mail_box) == 1
    assert len(runner['delivery_deny'].mail_box) == 1
    send_mail = runner['delivery_send'].mail_box[0]
    denied_mail = runner['delivery_deny'].mail_box[0]
    if inbound:
        assert send_mail.mail_from == 'user1@local'
        assert denied_mail.mail_from == 'user2@local'
    else:
        assert send_mail.mail_from == 'user2@local'
        assert denied_mail.mail_from == 'user1@local'
