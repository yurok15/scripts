import logging

from aes.core.statistics import prometheus
from aes.message import Category
from aes.filters.antivirus.base import AntivirusFilter
from aes.engines import VadeRetroEngine

logger = logging.getLogger(__name__)


class VadeRetroAVFilter(AntivirusFilter):
    engine_class = VadeRetroEngine

    @prometheus('aes_vaderetro_virus')
    async def process(self, message, antivirus=None):
        logger.debug('Process vaderetro av filter...')
        response = self.engine_response(message)
        category = response['category']
        if category in self.engine.virus_categories:
            message.email['X-Spam-Category'] = category
            message.email['X-Spam-Reasons'] = response['reasons']
            await self._process_virus(message, antivirus or {})

    async def _process_virus(self, message, config):
        actions = None
        for name, policy in config.items():
            if policy:
                actions = policy.get('actions')
                logger.debug('Get action from policy %s: %s', name, policy)
            if actions:
                break
        if not actions:
            return
        action_conf = None
        for action in actions:
            action_name = action['name']
            if action_name != 'strip_the_message' and \
                    action_name != 'strip_and_quarantine':
                action_conf = action
                break
        if action_conf is None:
            action_conf = {
                'name': 'quarantine',
                'quarantine_type': 'AdminQuarantine'
            }
        self.apply_action(message, **action_conf, reason='virus',
                          category=Category.VIRUS)
