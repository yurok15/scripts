import re


def exp_escape(string):
    for char in r'\.+[]{}?()':
        string = string.replace(char, '\\' + char)
    return string


def template_to_expression(template):
    if '://' in template:
        proto, rest = template.split('://', 1)
        proto_set = True
    else:
        proto, rest = '*', template
        proto_set = False
    if '/' in rest:
        domain, path = rest.split('/', 1)
        path_set = True
    else:
        domain, path = rest, '*'
        path_set = False
    proto_exp = exp_escape(proto).replace('*', '.*')
    domain_exp = exp_escape(domain).replace('*', '[^/]*')
    path_exp = exp_escape(path).replace('*', '.*')
    if proto_set:
        exp = '{}://{}'.format(proto_exp, domain_exp)
    else:
        exp = r'({}://)?(.*\.)?{}'.format(proto_exp, domain_exp)
    if path_set:
        exp += '/{}'.format(path_exp)
    else:
        exp += '(/.*)?'
    exp += '$'
    return re.compile(exp, re.IGNORECASE)
