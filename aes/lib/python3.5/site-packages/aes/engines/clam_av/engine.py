from aes.core.statistics import prometheus
from aes.engines.base import BaseAVEngine
from .connector import ClamdNetworkSocket, ClamdUnixSocket


class ClamAVEngine(BaseAVEngine):
    def _connection_factory(self, loop, config):
        kwargs = {
            'retry_attempts': config.get('retry_attempts', 3),
            'timeout': config.get('timeout', 60),
            'max_chunk_size': config.get('max_chunk_size', 1024 * 1024),
        }
        if 'host' in config:
            return ClamdNetworkSocket(
                loop,
                host=config['host'],
                port=config['port'],
                **kwargs)
        return ClamdUnixSocket(loop, unix_path=config.get('path'), **kwargs)

    @prometheus('aes_engine_clam_av')
    async def process(self, envelope):
        return await super(ClamAVEngine, self).process(envelope)
