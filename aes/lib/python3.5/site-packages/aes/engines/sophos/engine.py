from aes.core.statistics import prometheus
from aes.engines.base import BaseAVEngine
from .connector import (
    SophosNetworkSocket,
    SophosScanException,
)


class SophosEngine(BaseAVEngine):
    def _connection_factory(self, loop, config):
        return SophosNetworkSocket(
            loop,
            host=config['host'],
            port=config['port'],
            retry_attempts=config.get('retry_attempts', 3),
            timeout=config.get('timeout', 60),
            ignore_errors=config.get('ignore_errors') or [],
            scan_errors=config.get('scan_errors') or [],
        )

    @prometheus('aes_engine_sophos')
    async def process(self, envelope):
        try:
            return await super(SophosEngine, self).process(envelope)
        except SophosScanException as err:
            return {'error': err.args[0]}

    async def check_attachment(self, data):
        try:
            return await super(SophosEngine, self).check_attachment(data)
        except SophosScanException as err:
            return {'error': err.args[0]}
