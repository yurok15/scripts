from aes.core.statistics import prometheus
from .base import BaseEngineService


spam_score_counter = prometheus.summary(
    'cloudmark_spam_score', 'Cloudmark spam score counter')


class CloudmarkEngine(BaseEngineService):
    @staticmethod
    def get_last(envelope, header_name, failobj=None):
        values = envelope.email.get_all(header_name, [])
        return values[-1] if values else failobj

    async def process(self, envelope):
        x_cmae_score = self.get_last(envelope, 'X-CMAE-Score', '0.0')
        cmae_analysis = self.get_last(envelope, 'X-CMAE-Analysis', '')
        score = float(x_cmae_score)
        spam_score_counter.observe(score)
        return {
            'score': score,
            'reasons': cmae_analysis
        }
