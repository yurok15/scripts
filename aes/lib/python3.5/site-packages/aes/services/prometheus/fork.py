from aes.core.statistics import prometheus
from aes.core.controller import BaseService
from .protocol import PrometheusProtocol


class PrometheusForkService(BaseService):
    config_required = True

    def __init__(self, name, controller, config, loop):
        super(PrometheusForkService, self).__init__(
            name, controller, config, loop)
        self.prometheus_protocol = None
        self.prometheus_socket = config['socket']

    async def start(self):
        _, self.prometheus_protocol = await self.loop.create_connection(
            PrometheusProtocol.factory(self.loop),
            sock=self.prometheus_socket,
        )
        prometheus.connect_to_server(self.prometheus_protocol)

    def close(self):
        prometheus.connect_to_server(None)
        if self.prometheus_protocol:
            self.prometheus_protocol.close()
