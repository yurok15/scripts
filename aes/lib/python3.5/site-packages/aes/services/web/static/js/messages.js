app.controller("MessagesCtrl", ['$scope', '$http', '$state',
    function ($scope, $http, $state) {
        $scope.query_values = {
            'All': ['all', 'btn-success'],
            'Error': ['error', 'btn-danger'],
            'Quarantined': ['quarantine', 'btn-warning'],
            'Denied': ['deny', 'btn-primary']
        };
        $scope.time_values = {
            '15 minutes': ['15m', '15s'],
            '30 minutes': ['30m', '30s'],
            '1 hour': ['1h', '1m'],
            '4 hours': ['4h', '5m'],
            '12 hours': ['12h', '15m'],
            '24 hours': ['24h', '30m'],
            '7 days': ['7d', '3h'],
            '30 days': ['30d', '12h'],
            '60 days': ['60d', '1d'],
            '90 days': ['90d', '2d']
        };
        $scope.query_type = 'All';
        $scope.query_class = 'btn-success';
        $scope.time_filter = '15 minutes';
        $scope.show_time = false;
        $scope.loading_aggs = true;
        $scope.loading_table = true;
        $scope.data = [];
        $scope.graph_data = [];
        $scope.sender_domains = [];
        $scope.recipient_domains = [];
        $scope.filter_sender_domains = [];
        $scope.filter_recipient_domains = [];
        $scope.from_filter = '';
        $scope.to_filter = '';
        $scope.id_filter = '';
        $scope.sort_field = '@timestamp';
        $scope.sort_direction = 'desc';
        $scope.pages = 0;
        $scope.page = 1;
        $scope.total_records = 0;
        $scope.select_toggler = false;
        $scope.can_unloop = false;
        $scope.can_release = false;
        $scope.options = {
            chart: {
                type: 'historicalBarChart',
                height: 100,
                margin : {
                    top: 10,
                    right: 35,
                    bottom: 20,
                    left: 35
                },
                x: function(d){ return d.label; },
                y: function(d){ return d.value; },
                tooltip: {
                    keyFormatter: function(d) {
                        return d3.time.format('%x')(new Date(d));
                    }
                },

                transitionDuration: 500,
                xAxis: {
                    tickFormat: function(d) {
                        return d3.time.format('%x')(new Date(d))
                    }
                },
                yAxis: {},
                showYAxis: false
            }
        };
        $scope.get_filtering = function() {
            return {
                'query': $scope.query_values[$scope.query_type][0],
                'time': $scope.time_values[$scope.time_filter][0],
                'id': $scope.id_filter,
                'from': $scope.from_filter,
                'to': $scope.to_filter
            }
        };
        $scope.refresh_table = function () {
            $scope.loading_table = true;
            var data = $scope.get_filtering();
            data.sender_domains = $scope.filter_sender_domains;
            data.recipient_domains = $scope.filter_recipient_domains;
            data.sort_field = $scope.sort_field;
            data.sort_direction = $scope.sort_direction;
            $http.post('/web_app',
                angular.toJson(data),
                {'params':
                    {
                        'app': 'messages',
                        'method': 'query',
                        'page': $scope.page
                    }
            }).then(function successCallback(response) {
                $scope.data = response.data.list;
                $scope.data.forEach(function (item) {
                    item.checked = false;
                    item.loading = false;
                    item.actions = true;
                    item.report = false;
                    item.report_text = '';
                    item.report_class = '';
                    item.report_icon ='';
                });
                $scope.loading_table = false;
                $scope.pages = response.data.pages;
                $scope.total_records = response.data.total;
            });

        };
        $scope.refresh_aggs = function () {
            $scope.loading_aggs = true;
            $http.post('/web_app',
                angular.toJson($scope.get_filtering()),
                {'params': {
                    'app': 'messages',
                    'method': 'query_aggs',
                    'time': $scope.time_values[$scope.time_filter][1]
                }
            }).then(function successCallback(response) {
                $scope.loading_aggs = false;
                $scope.graph_data = response.data.graph;
                $scope.recipient_domains = response.data.recipients;
                $scope.sender_domains = response.data.senders
            });
        };
        $scope.refresh_all = function() {
            $scope.loading_table = true;
            $scope.refresh_aggs();
            $scope.refresh_table();
        };
        $scope.refresh_all();
        $scope.set_time = function(time_value) {
            $scope.time_filter = time_value;
            $scope.refresh_all();
        };
        $scope.set_query_type = function (value) {
            $scope.query_type = value;
            $scope.query_class = $scope.query_values[$scope.query_type][1];
            $scope.refresh_all();
        };
        $scope.toggle_sender_domain = function (value) {
            var index = $.inArray(value, $scope.filter_sender_domains);
            if (index == -1){
                $scope.filter_sender_domains.push(value)
            } else {
                $scope.filter_sender_domains.splice(index, 1)
            }
            $scope.page = 1;
            $scope.refresh_table();
        };
        $scope.sender_domain_class = function (value) {
            if ($.inArray(value, $scope.filter_sender_domains) >= 0){
                return 'info'
            } else {
                return ''
            }
        };
        $scope.toggle_recipient_domain = function (value) {
            var index = $.inArray(value, $scope.filter_recipient_domains);
            if (index == -1){
                $scope.filter_recipient_domains.push(value)
            } else {
                $scope.filter_recipient_domains.splice(index, 1)
            }
            $scope.page = 1;
            $scope.refresh_table();
        };
        $scope.recipient_domain_class = function (value) {
            if ($.inArray(value, $scope.filter_recipient_domains) >= 0){
                return 'info'
            } else {
                return ''
            }
        };
        $scope.toggle_order = function (value) {
            if (value == $scope.sort_field) {
                if ($scope.sort_direction == 'asc') {
                    $scope.sort_direction = 'desc'
                } else {
                    $scope.sort_direction = 'asc'
                }
            } else {
                $scope.sort_field = value
            }
            $scope.refresh_table();
        };
        $scope.set_page = function (value) {
            if ((value > 0) && (value <= $scope.pages) && (value != $scope.page)) {
                $scope.page = value;
                $scope.refresh_table();
            }
        };
        $scope.delivery_class = function (node) {
            if (node.delivery == 'error'){ return 'label-danger'}
            if (node.can_release){ return 'label-warning'}
            if (node.delivery == 'send') {return 'label-success'}
            return 'label-default'
        };
        $scope.check_all = function () {
            $scope.data.forEach(function (item) {
                item.checked = $scope.select_toggler;
            });
            $scope.select_item();
        };
        $scope.select_item = function () {
            $scope.can_release = false;
            $scope.can_unloop = false;
            $scope.data.forEach(function (item) {
              if (item.checked) {
                  if (item.can_release) {$scope.can_release = true}
                  if (item.can_unloop) {$scope.can_unloop = true}
              }
          })
        };
        $scope.unloop = function () {
            $scope.data.forEach(function (item) {
                if (item.can_unloop && item.checked) {
                    item.loading = true;
                    item.actions = false;
                    item.report = false;
                }
            });
            $scope.data.forEach(function (item) {
                if (item.can_unloop && item.checked) {
                    $http.get('/web_app',
                        {'params': {
                            'app': 'messages',
                            'method': 'unloop_message',
                            'message_id': item.usr_client_mail_id
                        }
                    }).then(function successCallback(response) {
                        item.loading = false;
                        item.actions = false;
                        item.report = true;
                        item.report_text = response.data.text;
                        var state = response.data.state;
                        if (state=="success") {
                            item.report_class = 'btn-success';
                            item.report_icon ='glyphicon-ok';
                        } else {
                            if (state=="warning") {
                                item.report_class = 'btn-warning';
                                item.report_icon ='glyphicon-warning-sign';
                            } else {
                                item.report_class = 'btn-danger';
                                item.report_icon ='glyphicon-remove';
                            }
                        }
                    });
                }
            })
        };
    }
]);