var app = angular.module('WebApp', [
    'ui.router',
    'ngRoute',
    'angular-json-pretty',
    'nvd3'
]);

app.config(function ($stateProvider, $urlRouterProvider) {
    // For any unmatched url, send to /route1
    $urlRouterProvider.otherwise("/");
    $stateProvider
        .state('index', {
            url: "/",
            templateUrl: "/static/templates/index.html",
            controller: function ($scope, $http) {
                $scope.data = {};
                $scope.data.forks = {};
                $http.get('/web_app', {'params':
                    {
                        'app': 'index_app',
                        'method': 'initialize'
                    }
                }).then(function successCallback(resp) {
                    var forks = {};
                    for (num in resp.data.responses) {
                        forks[num] = {
                            'num': num,
                            'pid': resp.data.responses[num].response.pid,
                            'mails_in_work':
                                resp.data.responses[num].response.mails_in_work,
                        };
                    }
                    $scope.data.forks = forks;
                }).then(function() {
                    var ws_url = 'ws://' + document.location.host + '/ws';
                    var ws = new WebSocket(ws_url);
                    ws.onmessage = function(message) {
                        $scope.$apply(function() {
                            var update = JSON.parse(message.data);
                            var fork = update['fork'];
                            var mails = update['mails_in_work'];
                            $scope.data.forks[fork]['mails_in_work'] = mails
                        });
                    };
                })
            }
        })
        .state('cluster', {
            url: "/cluster",
            templateUrl: "/static/templates/cluster.html",
            controller: function ($scope, $http) {
                $scope.data = [];
                $http.get('/web_app', {'params':
                    {
                        'app': 'cluster_state',
                        'method': 'state'
                    }
                }).then(function successCallback(response) {
                    $scope.data = response.data;
                });
            }
        })
        .state('versions', {
            url: "/versions",
            templateUrl: "/static/templates/versions.html",
            controller: function ($scope, $http) {
                $scope.data = [];
                $http.get('/web_app', {'params':
                    {
                        'app': 'cluster_state',
                        'method': 'versions'
                    }
                }).then(function successCallback(response) {
                    $scope.data = response.data;
                });
            }
        })
        .state('config', {
            url: "/config",
            templateUrl: "/static/templates/config.html",
            controller: function ($scope, $http, $sce) {
                $scope.data = [];
                $http.get('/web_app', {'params':
                    {
                        'app': 'config',
                        'method': 'read'
                    }
                }).then(function successCallback(response) {
                    $scope.jsonObj = response.data.config;
                });
            }
        })
        .state('messages', {
            url: "/messages",
            templateUrl: "/static/templates/messages.html",
            controller: "MessagesCtrl"
        })
        .state('messages.info', {
            url: "/info/:pk",
            templateUrl: "/static/templates/message_info.html",
            controller: "MessageInfoCtrl"
        })
        .state('vade_retro', {
            url: "/test/vaderetro",
            templateUrl: "/static/templates/vade_retro.html",
            controller: "VadeRetroCtrl"
        })
        .state('clam_av', {
            url: "/test/clamav",
            templateUrl: "/static/templates/clamav.html",
            controller: "ClamAVCtrl"
        })
        .state('email_sender', {
            url: "/test/email_sender",
            templateUrl: "/static/templates/email_sender.html",
            controller: "EmailSenderCtrl"
        })
});
