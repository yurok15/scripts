import importlib
import os
from . import default_settings

ENVIRONMENT_VARIABLE = 'AES_SETTINGS_MODULE'


class Settings(dict):
    def setup_with_env_variable(self, silent, name=ENVIRONMENT_VARIABLE):
        if name in os.environ:
            mod_name = os.environ.get(name)
            mod = importlib.import_module(mod_name)
            self._setup_from_obj(mod)
        elif not silent:
            raise ValueError('Enviroment varible %s not set' % name)

    def _setup_from_obj(self, mod):
        for attr in dir(mod):
            if not attr.startswith('_'):
                value = getattr(mod, attr)
                if isinstance(value, (str, tuple, dict, int, list)):
                    self[attr.upper()] = getattr(mod, attr)

    def __init__(self, silent=True, *args, **kwargs):
        super().__init__(*args, **kwargs)
        self._setup_from_obj(default_settings)
        self.setup_with_env_variable(silent=silent)
